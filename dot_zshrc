# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
	export EDITOR='vim'
else
	export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="nvim ~/.zshrc"
alias vim="nvim"
alias vi="hx"
alias oldvim="vim"
alias cat="bat"
alias rm="rmtrash" rd="rmtrash" md="mkdir -p"
alias dfh="df -h"  du="dust" dus="dust -s"
alias j="z"
alias docker='lima nerdctl "$@"'
alias docker-compose='lima nerdctl compose "$@"'

# GCC Config
alias gcc="gcc-11"
alias g++="g++-11"
alias cc="gcc-11"
alias c++="c++-11"

export GPG_TTY=$(tty)

# Proxy Settting
export https_proxy=http://127.0.0.1:1081
export http_proxy=http://127.0.0.1:1081
export all_proxy=http://127.0.0.1:1081

noproxy () {
  unset http_proxy
  unset https_proxy
  unset all_proxy
  echo "Proxy off"
}

proxy () {
  export https_proxy=http://127.0.0.1:1081
  export http_proxy=http://127.0.0.1:1081
  export all_proxy=http://127.0.0.1:1081
  echo "Proxy on"
}

wg_home () {
    sudo WG_QUICK_USERSPACE_IMPLEMENTATION=boringtun WG_SUDO=1 wg-quick up  ~/wireguard/home/home.conf
}

wg_home_off () {
    sudo WG_QUICK_USERSPACE_IMPLEMENTATION=boringtun WG_SUDO=1 wg-quick down  ~/wireguard/home/home.conf
}


# Cargo
export PATH="$HOME/.cargo/bin:$PATH"
export SCCACHE_DIR="$HOME/.cargo/sccache"
export RUSTC_WRAPPER="sccache"

# GCC Varaible
#export CFLAGS="-std=c99 -fPIC"
#export CXXFLAGS="-std=c++14 -march=native -mtune=native -fPIC"
#export CPPFLAGS="-std=c++14 -Os -march=native -mtune=native -fPIC"
#export LDFLAGS="-Os -shared"
#export SRC_DIR="./src"
#export DEST_DIR="./dest"
#export MAKEFLAGS="-j12"

# PNPM
export PNPM_HOME="/Users/hackerchai/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"

# Java 8
export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home
export JAVA_18_HOME=/Library/Java/JavaVirtualMachines/jdk-18.0.1.1.jdk/Contents/Home
export JAVA_HOME=$JAVA_18_HOME
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

# Tomcat 9
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/Library/apache-tomcat-9.0.38/bin:$PATH"

# Maven
export M3_HOME="$HOME/Library/apache-maven-3.6.3"
export PATH="$M3_HOME/bin:$PATH"

# Ruby
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig:$PKG_CONFIG_PATH"

# Curl
export PATH="/usr/local/opt/curl/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/curl/lib/pkgconfig:$PKG_CONFIG_PATH"

# APR
export PATH="/usr/local/opt/apr/bin:$PATH"

# SQLite
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# LaTeX
export PATH="/Library/TeX/texbin:$PATH"

# Go
export GOPROXY=https://goproxy.cn
export GO111MODULE=on
export GOPATH=/Users/hackerchai/go
export PATH=$PATH:${GOPATH//://bin:}/bin

# vcpkg
export VCPKG_ROOT="$HOME/Binaries/vcpkg"
export PATH="$HOME/Binaries/vcpkg:$PATH"

# wasmtime
export WASMTIME_HOME="$HOME/.wasmtime"
export PATH="$WASMTIME_HOME/bin:$PATH"

# tldr
export TEALDEER_CONFIG_DIR="$HOME/.config/tealdeer/config.toml"

# fzf
export FZF_DEFAULT_COMMAND="fd --color=never --type file --exclude={.git,.idea,.vscode,pkg,node_modules,vendor,bin,build} --hidden --follow . $HOME"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS="--height 40% --preview 'bat --style=numbers --color=always --line-range :500 {}'"
export FZF_ALT_C_COMMAND="fd --color=never --type directory --exclude={.git} --hidden --follow . $HOME"

# skim
export SKIM_DEFAULT_COMMAND="fd --color=never --type file --exclude={.git,.idea,.vscode,pkg,node_modules,vendor,bin,build} --hidden --follow . $HOME"

# zellij
export ZELLIJ_CONFIG_FILE="$HOME/.config/zellij/config.yaml"

# wg-quiick
export WG_QUICK_USERSPACE_IMPLEMENTATION="boringtun"

# Plugin Settings
## Zsh-Auto-Suggestion Config
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_USE_ASYNC=true
## fzf-tab Config
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
zstyle ':fzf-tab:*' switch-group ',' '.'

export ZSH="$HOME/.sheldon/repos/github.com/ohmyzsh/ohmyzsh"
eval "$(sheldon source)"
