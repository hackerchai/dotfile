# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
	export EDITOR='vim'
else
	export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="nvim ~/.zshrc"
alias ohmyzsh="nvim ~/.oh-my-zsh"
alias vim="nvim"
alias vi="nvim"
alias oldvim="vim"
alias rm='rmtrash'

export GPG_TTY=$(tty)

# Proxy Settting
export https_proxy=http://127.0.0.1:1081
export http_proxy=http://127.0.0.1:1081
export all_proxy=http://127.0.0.1:1081

noproxy () {
  unset http_proxy
  unset https_proxy
  unset all_proxy
  echo "Proxy off"
}

proxy () {
  export https_proxy=http://127.0.0.1:1081
  export http_proxy=http://127.0.0.1:1081
  export all_proxy=http://127.0.0.1:1081
  echo "Proxy on"
}


# Cargo
export PATH="$HOME/.cargo/bin:$PATH"
export SCCACHE_DIR="$HOME/.cargo/sccache"
export RUSTC_WRAPPER="sccache"

# Java 8
export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home
export JAVA_HOME=$JAVA_8_HOME
export PATH=$JAVA_HOME/bin:$PATH:.
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

# Tomcat 9
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/Library/apache-tomcat-9.0.38/bin:$PATH"

# Maven
export M3_HOME="$HOME/Library/apache-maven-3.6.3"
export PATH="$M3_HOME/bin:$PATH"

# Ruby
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig:$PKG_CONFIG_PATH"

#NVM
export NVM_DIR="$HOME/.nvm"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Curl
export PATH="/usr/local/opt/curl/bin:$PATH"
export PKG_CONFIG_PATH="/usr/local/opt/curl/lib/pkgconfig:$PKG_CONFIG_PATH"

# APR
export PATH="/usr/local/opt/apr/bin:$PATH"

# SQLite
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# LaTeX
export PATH="/Library/TeX/texbin:$PATH"

#Go
export GOPROXY=https://goproxy.io,direct
[[ -s "/Users/hackerchai/.gvm/scripts/gvm" ]] && source "/Users/hackerchai/.gvm/scripts/gvm"


### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk


# Zinit Plugins
zinit wait lucid for \
        OMZ::lib/termsupport.zsh \
        OMZ::lib/compfix.zsh \
        OMZ::lib/completion.zsh \
        OMZ::lib/grep.zsh \
        OMZ::lib/directories.zsh \
        OMZ::lib/spectrum.zsh \
        OMZ::lib/theme-and-appearance.zsh \
        OMZ::plugins/autojump/autojump.plugin.zsh \
        OMZ::plugins/tmux/tmux.plugin.zsh \
        OMZ::plugins/thefuck/thefuck.plugin.zsh \
        OMZ::plugins/common-aliases/common-aliases.plugin.zsh \
        OMZ::plugins/fzf/fzf.plugin.zsh \
        OMZ::plugins/nvm/nvm.plugin.zsh \

zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

# Plugin Settings
## Zsh-Auto-Suggestion Config
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_USE_ASYNC=true


eval "$(starship init zsh)"
